#  _                                          __ 
# | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
# | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_ 
# | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#  \__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|  
#

# keybind {{{

# prefixキーを変更する
set -g prefix 'C-g'

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -s escape-time 0

# ペインのインデックスを1から始める
setw -g pane-base-index 0

# Prefix+- で横に、Prefix+| で縦に分割（ペイン）する
# bind-key | split-window -h
# bind-key - split-window -v
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Prefix + Ctrl-h/l でウィンドウ切り替え
# Prefix + Ctrl-h,h,h,h,...と連打できる
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Prefix+hjkl でペイン移動
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# ペインサイズを上下左右（Prefix+JKHL）に変更
# Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 1
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r L resize-pane -R 1

# マウス操作を有効にする
# 参考：https://xyzhou.com/blogs/enable-mouse-scrolling-with-tmux-2.1-on-mac/
set -g mouse on
bind-key -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Vi キーバインド
set-window-option -g mode-keys vi

# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"
#bind-key -t vi-copy v begin-selection

# Prefix+Enter/y でコピー
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi y     send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Prefix+p でペースト
# クリップボードにも保存されているので Cmd-v でもペースト可能
bind-key p paste-buffer

# Reload configuration file
bind-key r source-file ~/.tmux.conf \; display "Configuration reloaded"

# }}}
# status bar {{{

# ステータスバーをトップに配置する
set-option -g status-position top

# 左右のステータスバーの長さを決定する
set-option -g status-left-length 90
set-option -g status-right-length 90

# #H => マシン名
# #P => ペイン番号
# 最左に表示
# set-option -g status-left '#H:[#P]'
set-option -g status-left '✨✨✨  Kanchi:[#P] ✨✨✨ '

# Wi-Fi、バッテリー残量、現在時刻
# 最右に表示
# set-option -g status-right '[%Y-%m-%d(%a) %H:%M]'
set-option -g status-right '#(wifi -i -r -s)   #(battery -t -m -r)  ✨✨✨  %Y-%m-%d(%a) %H:%M ✨✨✨'
# set-option -g status-right '#[fg=colour15]#(wifi)#[default]  #(battery -t -r)  %a %H:%M'
# set-option -g status-right '#[fg=colour15]#(wifi -r -s)#[default]   #(battery -t -r)  #(timerx +"%a %H:%M")'

# ステータスバーを Utf-8 に対応
# set-option -g status-utf8 on

# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

# }}}


#### COLOUR

# use true color terminal
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# default statusbar colors
set-option -g status-bg colour0 # black
set-option -g status-fg colour7
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour7
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default

# pane border
set-option -g pane-border-fg colour8
set-option -g pane-active-border-fg colour15

# message text
# set-option -g message-bg colour235 #base02
# set-option -g message-fg colour166 #orange

# pane number display
# set-option -g display-panes-active-colour colour33 #blue
# set-option -g display-panes-colour colour166 #orange

# clock
# set-window-option -g clock-mode-colour colour64 #green

# bell
# set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# fix clipboard problem
set-option -g default-command "reattach-to-user-namespace -l zsh"
